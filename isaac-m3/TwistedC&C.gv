digraph sample {
    graph [ranksep=0];
    node [shape=record];

	Reactor [
		label=<{
			<FONT POINT-SIZE="24.0">
				Reactor
			</FONT>|
			Instance of 
			<FONT FACE="monospace">
				class EPollReactor
			</FONT>
		}>
		pos="0,0!"
	];

	EventQueue [
		label=<{
			<FONT POINT-SIZE="24.0">
				Event Queue
			</FONT>
		}>
		pos="0,3!"
	];

	SystemEvent1 [
		label=<{
			<FONT POINT-SIZE="24.0">
				System Event
			</FONT>|
			<FONT FACE="bold monospace">
				CLIENT_ACCEPTED
			</FONT>
		}>
		pos="-2,6!"
	];

	SystemEvent2 [
		label=<{
			<FONT POINT-SIZE="24.0">
				System Event
			</FONT>|
			<FONT FACE="monospace">
				SERVER_DATA
			</FONT>
		}>
		pos="2,6!"
	];

	Function1 [
		label=<{
			<FONT POINT-SIZE="24.0">
				Function
			</FONT>|
			<FONT FACE="monospace">
				function registerClient()
			</FONT>
		}>
		pos="-6,0!"
	];

	ProcessManager [
		label=<{
			<FONT POINT-SIZE="24.0">
				Process Manager
			</FONT>
		}>
		pos="0,-2!"
	];

	SystemEvent1 -> EventQueue [
		headlabel="Event Fired"
		labeldistance=13
		labelangle=20
	];

	SystemEvent2 -> EventQueue [
		headlabel="Event Fired"
		labeldistance=13
		labelangle=-20
	];

	EventQueue -> Reactor;
	EventQueue -> Reactor;
	EventQueue -> Reactor [
		headlabel="Stream of Events"
		labeldistance=12
		labelangle=40
	];

	Reactor -> Reactor [
		xlabel="Continuous Polling for New Events"
	];

	Reactor -> Function1 [
		taillabel="Bind Function to\n System Event"
		labeldistance=10
		labelangle=0
	];

	Reactor -> ProcessManager [
		headlabel="Spawn Process"
		labeldistance=5
		labelangle=-6
	]
}